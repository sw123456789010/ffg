//////////////
// Shader names - version 1.00
//////////////

// # = constant
// * = readonly
// & = obsolete

true#
false#
pi#

// types
x#
y#
z#
w#
r#
g#
b#
a#
s#
t#
q#
p#
xyzw#
xyz#
xy#
rgba#
rgb#
bgr#
gbra#
grba#
bgra#
brga#
rbga#
MAX_VS_LIGHTS#
MATRIX_VIEW#
MATRIX_PROJECTION#
MATRIX_WORLD#
MATRIX_WORLD_VIEW#
MATRIX_WORLD_VIEW_PROJECTION#
MATRIX_MAX#

// GameMaker special
gm_BaseTexture
gm_Matrices
gm_LightingEnabled
gm_VS_FogEnabled
gm_FogStart
gm_RcpFogRange
gm_PS_FogEnabled
gm_FogColour
gm_AlphaTestEnabled
gm_AlphaRefValue

// special
gl_Position
gl_PointSize

// Fragment variables R/W
gl_FragCoord
gl_FrontFacing
gl_FragColor
gl_FragData
gl_PointCoord

gl_MaxVertexAttribs
gl_MaxVertexUniformVectors
gl_MaxVaryingVectors
gl_MaxVertexTextureImageUnits
gl_MaxCombinedTextureImageUnits
gl_MaxTextureImageUnits
gl_MaxFragmentUniformVectors
gl_MaxDrawBuffers

// Built in uniforms
gl_DepthRangeParameters
near
far
diff
gl_DepthRange

// General functions

sin(angle)
cos(angle)
tan(angle)
asin(x)
acos(x)
atan(y, x)
radians(deg)
degrees(rad)


pow(x, y) 
exp(val) 
log(val) 
exp2(val) 
log2(val) 
sqrt(val) 
inversesqrt(val)

abs(val) 
sign(val)
floor(val)
ceil(val)
fract(val)
mod(val,val)
min(val,val)
max(val,val)
clamp(val,val,val) 
mix(val,val,val)
step(val,val)
smoothstep(val,val,val)

length(vec)
distance(val,val)
dot(val,val)
cross(vec3,vec3)
normalize(val)
faceforward(V,I,N)
reflect(I,N) 
refract(I,N,eta) 

matrixCompMult(x, y)

lessThan(val,val)
lessThanEqual(val,val)
greaterThan(val,val)
greaterThanEqual(val,val)
equal(val,val)
notEqual(val,val)

any(bvec)
all(bvec)
not(bvec)

texture2D(sampler2D,vec2,[bias]) 
texture2DProj(sampler2D,vec,[bias]) 
texture2DLod(sampler2D,vec2,float)
texture2DProjLod(sampler2D,vec,float)
textureCube(samplerCube,vec3,[bias]) 
textureCubeLod(samplerCube,vec3,float)

discard
